@page "/analogclock"

<div class="clocks-wrapper">
    <div class="clock-container">
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[1].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[1].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[2].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[2].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[3].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[3].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
    </div>
    <div class="clock-container">
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[4].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[4].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[5].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[5].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
        <div class="clock">
            <div class="hour" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[6].FirstArm.State) : 0)deg);"><div></div></div>
            <div class="minute" style="transform:rotate(@(controller != null ? ArmStateToDegree(controller.Clocks[6].SecondArm.State) : 0)deg);"><div></div></div>
            <span class="ctr"></span>
        </div>
    </div>
</div>

@code {
    public delegate void UpdateStateCallback();
    Controller? controller;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

        controller = new Controller(StateHasChanged);
	}

    public static double ArmStateToDegree(ArmState state){
        switch(state){
            case ArmState.Zero:
                return 360.0;
            case ArmState.Three:
                return 90.0;
            case ArmState.Six:
                return 180.0;
            case ArmState.Nine:
                return 270.0;
            case ArmState.None:
                return 225.0;
            default: return 0;
        }
    }

    public class Controller{
        
        private UpdateStateCallback updateStateCallback;
        public Dictionary<int, Clock> Clocks {get; private set;}
        public Controller(UpdateStateCallback callback){
            
            updateStateCallback = callback;

            Clocks = new Dictionary<int, Clock>();
            
            for(var i=0; i<24; i++){
                Clocks.Add(i+1, new Clock(i+1));
            }

            SetClock(null);
		    
            System.Threading.Timer timer = new System.Threading.Timer(SetClock, new System.Threading.AutoResetEvent(false), 1000, 1000); // 10 milliseconds
        }

        private void SetClock(object? stateInfo)
        {
            var time = DateTime.Now;
            @* hr = 360.0 * time.Hour / 12 + 30.0 * time.Minute / 60.0;
            min = 360.0 * time.Minute / 60 + 6.0 * time.Second / 60.0;
            sec = 360.0 * time.Second / 60 + 6.0 * time.Millisecond / 1000.0; *@
            for(var i=0; i<24; i++){
                switch(time.Second % 10){
                    case 0:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Six;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.Zero;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 1:
                        Clocks[1].FirstArm.State = ArmState.None;
                        Clocks[1].SecondArm.State = ArmState.None;
                        Clocks[4].FirstArm.State = ArmState.Zero;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.None;
                        Clocks[2].SecondArm.State = ArmState.None;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.None;
                        Clocks[3].SecondArm.State = ArmState.None;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Six;
                        break;
                    
                    case 2:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Three;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Three;
                        Clocks[2].SecondArm.State = ArmState.Six;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Nine;
                        Clocks[3].FirstArm.State = ArmState.Zero;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Nine;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 3:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Three;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Three;
                        Clocks[2].SecondArm.State = ArmState.Three;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.Three;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 4:
                        Clocks[1].FirstArm.State = ArmState.Zero;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Zero;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Three;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Nine;
                        Clocks[3].FirstArm.State = ArmState.None;
                        Clocks[3].SecondArm.State = ArmState.None;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Six;
                        break;

                    case 5:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Nine;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Three;
                        Clocks[5].FirstArm.State = ArmState.Nine;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.Three;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 6:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Nine;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Six;
                        Clocks[5].FirstArm.State = ArmState.Nine;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.Zero;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 7:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Three;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.None;
                        Clocks[2].SecondArm.State = ArmState.None;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.None;
                        Clocks[3].SecondArm.State = ArmState.None;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Six;
                        break;

                    case 8:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Three;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Nine;
                        Clocks[3].FirstArm.State = ArmState.Zero;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;

                    case 9:
                        Clocks[1].FirstArm.State = ArmState.Three;
                        Clocks[1].SecondArm.State = ArmState.Six;
                        Clocks[4].FirstArm.State = ArmState.Nine;
                        Clocks[4].SecondArm.State = ArmState.Six;
                        Clocks[2].FirstArm.State = ArmState.Zero;
                        Clocks[2].SecondArm.State = ArmState.Three;
                        Clocks[5].FirstArm.State = ArmState.Zero;
                        Clocks[5].SecondArm.State = ArmState.Six;
                        Clocks[3].FirstArm.State = ArmState.Three;
                        Clocks[3].SecondArm.State = ArmState.Three;
                        Clocks[6].FirstArm.State = ArmState.Zero;
                        Clocks[6].SecondArm.State = ArmState.Nine;
                        break;
                    default:
                        break;
                }
            }
            //Console.WriteLine($"seconds: {sec}");
            updateStateCallback(); // MUST CALL StateHasChanged() BECAUSE THIS IS TRIGGERED BY A TIMER INSTEAD OF A USER EVENT
        }
    }

    public class Clock{
        public int Id { get; private set; }
        public ClockArm FirstArm {get; private set; } = new ClockArm();
        public ClockArm SecondArm {get; private set; } = new ClockArm();       
        public Clock(int Id){
            this.Id = Id;
        }
    }

    public class ClockArm{
        public ArmState State{get; set;}
        public ArmConfig Config{get; private set;} = new ArmConfig();
    }

    public class ArmConfig{
        public Direction Direction{get; private set;} = Direction.Clockwise;
        public int MaxSpeed{get; private set;} = 3;
        public int Acceleration{get; private set;} = 2;
        public int Deceleration{get; private set;} = 2;
    }

    public enum Direction{
        Clockwise, 
        Anticlockwise
    }

    public enum ArmState{
        Zero, 
        Three,
        Six,
        Nine,
        None
    }
}